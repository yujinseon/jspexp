# 주요학습범위
1. jsp의 전체 범위에 대한 내용 확인
2. 구성요소와 기본 객체 확인
	
# 생각해봅시다.
1. jsp을 구성하고 있는 구성요소는 웹 화면에서 어떤 영향을 미치는가?
	웹서버가 구축 ==> client가 브라우저를 통해서 주소로 접근 ==> 웹서버가 해당 화면을 전달(response)
	==> client가 브라우저에 입력을 하고 submit() 처리 
	==> 웹서버에 특정한 페이지에 요청값을 받아서 처리(request)
	
2. 기본 객체는 웹프로그램의 처리에 어떤 영향을 미칠 것인가?
	request, response
	out : response객체 하위 PrintWriter의 참조값으로 화면 출력을 담당
	pageContext : 주로 페이지 단위로 처리할 때, 사용되는 객체
	session : 클라이언트와 서버단과의 관계에서 서버단에 임시 데이터를 저장하여 처리할 때, 사용되는 객체
				클라이언트가 브라우저를 통해 서버와 연결되어 있는 상황에서만 활용가능.
	application : 서버단에서 환경설정이나, 서버가 기동되는 시간동안 처리할 데이터를 저장할 때, 사용되는 객체
	Cookie : 클라이언트와 서버단위 관계속에 클라이언트에 특정한 데이터를 저장할 때, 사용되는 객체

3. script처리와 java의 변수 객체 처리는 어떠한 관계가 있는가?
	declare <%!  %> : 선언되는 변수, 메서드, 클래스로 현재 페이지에서만 활용되는 구성요소들을 선언하는 영역을
				말한다.
	scriptlet <% %> : 주로 자바코드를 사용할 때, 활용되는 영역으로 화면에 출력할 내용과 조건, 반복 처리
		변수, 객체 생성 및 메모리 로딩을 담당하는 영역을 말한다.
	expression <%= %> : 웹 화면에 출력할 내용을 처리하는 범위로 화면에서 위에 선언한 declare, scriptlet
		의 내용을 최종적으로 처리할 때 활용된다.	
# 학습목표
1. jsp를 처리하는 동작에 대한 이해를 한다.
2. jsp를 이루고 있는 구성요소들이 어떤 작용을 하는 지 알고, 각각의 구성요소들이 필요로 하는 곳에 활용할 수 있다.
3. script의 종류와 내용별로 그 기능을 알고, 사용할 수 있다.

 	
# 주요핵심 keyword
1. @page, contentType, pageEncoding
2. directive, taglib, include
3. request.getParameter(), request.getParameterValues()
4. response.getWriter().print()
5. pageContext/request/session/application
	.setAttribute("key", "value"); .getAttribute("key")


# 주요 진행계획(학습 단계별 체계화)
1. 전체 핵심 내용을 이해하고, 간단한 코드로 확인한다.
2. 각 내용을 내용 계열화를 통해 연관되어 이해를 한다.
3. 세부 내용을 기능 메서드의 기능을 확인하고 진행한다.

4. 4시 - 질문사항, 일일 과제진행
5. 5시 - 조별과제 진행 회의


# 조별 발표 진행
1. feedback된 내용 확인(오늘 중으로 각 조별로 결과 내용 feedback)


# 개념 및 원리이해/실습(진도)

# 평가/정리 : 15:40~







