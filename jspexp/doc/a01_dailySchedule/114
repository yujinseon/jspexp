# 전날 주요 질문내용
1. jsp와 controller 호출 주소의 차이
	jsp에 바로 실행은 실제 해당 자원이 있는 주소를 호출 (경로 노출로 보안문제)
	controller를 통하여 연결된 jsp를 호출하면 실제 jsp의 경로가 노출되지 않는 장점이 있다.
		그래서, mvc나 프레임웍에서 이러한 패턴으로 화면호출을 한다.
		controller의 상단에 선언한 부분이 url로 호출되고 
			urlPatterns = { "/mvc01.do" }urlPatterns = { "/mvc01.do" }
			최하단에 jsp 페이지를 연결하여 처리하게 한다.
			
2. jquery string의 데이터 유형의 구분 ""(문자열), 숫자..
	?id=himan&pass=777&product=사과&price=3000
	어떻게 숫자인지 문자인지 구문하여 요청값에서 처리하는가?
	url에 있는 주소는 문자열 자체로 인식해서 처리하기에 해당 문자열 마다 데이터 유형을 구분할 수 없다.
	price=3000  ==> "3000" 문자열로 요청값을 가져올 수 밖에 없고 이것을 숫자로 형변환해서 사용한다.
		product="사과"&price=3000(X)
	
3. 12일 과제 3번에서, 버튼을 누르면 같은 화면에서 쿠키 목록을 출력하고 싶은데 onclick 을 
	자바스크립트로 넘기지 않고도 출력할 수 있는지 궁금합니다...
	클라이어트 ==> 서버  
	서버안에서 코드로 명령어로 reponse.addCookie(new Cookie()) 준 페이지에서는 쿠키값이 아직
	생성되지 않음. 다시 다른 페이지나 refresh를 통해서 해당 페이지의 쿠키값을 request.getCookies()로
	서버에 전달해서 해당 쿠키내용을 확인 할 수 있다. 
	==> reponse.addCookie(new Cookie())  상황에서 바로 쿠키값을 보이게 할려면, refresh 명령을 js처리하건.
	Cookie ck = new Cookie(key, value);
	reponse.addCookie(ck)
	기존 쿠키 반복문 처리 가장 밑에
	ck.getName()/ck.getValue()를 추가 표기 하여야 한다. (넣기전에 일단 추가된 걸 보여 주는 처리)        
	
	
# 주요학습범위
1. jsp 전체 범위 내용 확인하기
	- ajax처리 : 비동기적 데이터 처리
2. 스프링 프레임웍 : 기본, 전용툴 sts
# 생각해봅시다.
1. 웹 개발의 유형은 어디까지 발전해 왔는가?
	cgi
	jsp(모델1)
	jsp(모델2)
	framework
		- struts
		- spring
		- anyframework/전자정보프레임웍 : 
			기본 setting을 자동 처리 table를 생성하면 이 테이블을 활용하여 vo, dao, 페이징처리된 화면리스트
			등록/수정/삭제 처리 웹화면 자동 생성..
		- springboot
			추가되는 환경설정이나 lib 처리를 자동을 처리할 수 있게 만들었음.
			1) jsp환경
			2) 타임리프를 통한 화면구현, vue(lib)형태로 화면구현
			3) front서버와, backend서버 분리..
				- front서버 : node계열 (css, html, js==> typescript ), vue, react
				- back서버 : tomcat(db처리, controller, service, dao) ajax로 front에 데이터를
					전송 처리.	
2. ajax를 통해서 처리할 수 있는 프로그램 유형은 어떤 것들이 있는가?	
	1) 순수 js를 통해 controller단에서 요청에 의해 처리되는 화면 처리
	2) jquery를 통해 controller과의 데이터 처리 및 화면 구현.
	3) axios(ajax lib)를 통한 스프링의 데이터 호출 및 vue 화면으로 구현 처리..


# 학습목표
1. ajax 개념을 알고, 처리프로세스를 이해하고, backend/frontend을 구분하여 코딩할 수 있다.
2. 스프링 프레임워크에 대한 이해를 한다.
 	
# 주요핵심 keyword
1. 기본 js ajax : XMLHttpRequest, open(url, get/post, 비동기여부),  send(),
				responseText(), onreadyStateChange, readyState, status
2. jquery Ajax : $.ajax({ url:"", type:"", data:"",success:function(){}, error(){}})


# 주요 진행계획(학습 단계별 체계화)
1. 전체 핵심 내용을 이해하고, 간단한 코드로 확인한다.
2. 각 내용을 내용 계열화를 통해 연관되어 이해를 한다.
3. 세부 내용을 기능 메서드의 기능을 확인하고 진행한다.
4. 조별 발표 진행
	- 개선 사항 정리 
	
5. 14시 - 주간 점검(진도속도, 요청사항 점검)
6. 16시 - 질문사항, 일일 과제진행
7. 17시 - 조별과제 진행 회의


# 조별 발표 진행
1. 조별발표 진행 9:10 - 개선사항 정리 배포.
	발표자 올려주세요.
2. 공통 feeback사항
	1) 발표시 가독성 있는 크기로 설정.
	2) 일정 : 화면 설계 FRONT구현 ==> BACK구현
	3) 데이터 : 숫자형(천단위 콤마) ppt자료 및 코드( <fmt: 활용 )	
	4) 화면 구현 : 왼쪽 - 구현화면, 오른쪽 - 핵심코드,sql
	5) 진행 플로우 점검
		- 전체
		- 주단위
			전주(금) - 다음 주 진행할 일정계획 및 담당자 확인,
					  발표 feedback 사항 및 변경 및 개선사항 정리
					  진행에 필요한 내용 점검(조장/조원), 진행 계획 수립
			월 - 개선사항 적용 템플릿 점검(조별활동시간)
				text로 개선사항 내용과 함께 ppt의 페이지를 표기해서 전달 부탁드립니다.		
			화 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
		    수 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
		    목 - 최종 발표 및 산출물(소스 및 진행 내용) 자료 제출
		    금 - 발표
# 개념 및 원리이해/실습(진도)

# 평가/정리(15:40)
